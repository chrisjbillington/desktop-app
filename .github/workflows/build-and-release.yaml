name: Build

on:
  push:
    branches:
      - ga-test
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,  python: 3.6, arch: x64, miniconda: Miniconda3-latest-Linux-x86_64.sh    }
          - { os: ubuntu-latest,  python: 3.7, arch: x64, miniconda: Miniconda3-latest-Linux-x86_64.sh    }
          - { os: ubuntu-latest,  python: 3.8, arch: x64, miniconda: Miniconda3-latest-Linux-x86_64.sh    }
          - { os: windows-latest, python: 3.6, arch: x64, miniconda: Miniconda3-latest-Windows-x86_64.exe }
          - { os: windows-latest, python: 3.7, arch: x64, miniconda: Miniconda3-latest-Windows-x86_64.exe }
          - { os: windows-latest, python: 3.8, arch: x64, miniconda: Miniconda3-latest-Windows-x86_64.exe }
          - { os: windows-latest, python: 3.6, arch: x86, miniconda: Miniconda3-latest-Windows-x86.exe    }
          - { os: windows-latest, python: 3.7, arch: x86, miniconda: Miniconda3-latest-Windows-x86.exe    }
          - { os: windows-latest, python: 3.8, arch: x86, miniconda: Miniconda3-latest-Windows-x86.exe    }
          - { os: macos-latest,   python: 3.6, arch: x64, miniconda: Miniconda3-latest-MacOSX-x86_64.sh   }
          - { os: macos-latest,   python: 3.7, arch: x64, miniconda: Miniconda3-latest-MacOSX-x86_64.sh   }
          - { os: macos-latest,   python: 3.8, arch: x64, miniconda: Miniconda3-latest-MacOSX-x86_64.sh   }

    env:
      SCM_LOCAL_SCHEME: no-local-version

    steps:
    - uses: actions/checkout@v2
    - if: github.event.ref_type != 'tag'
      run: |
        git fetch --prune --unshallow
        git tag -d $(git tag --points-at HEAD)
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - run: python -m pip install --upgrade pip setuptools wheel setuptools_scm

    - run: python setup.py bdist_wheel

    - if: strategy.job-index == 0
      run: python setup.py sdist
    
    - uses: actions/upload-artifact@v1
      with:
        name: dist
        path: ./dist

    - name: Download miniconda
      run: curl -LO "https://repo.continuum.io/miniconda/${{ matrix.miniconda }}" 
    - name: Install miniconda (Windows)
      if: matrix.os == 'windows-latest'
      # Args aren't passed correctly to the miniconda installer unless run with cmd.exe:
      run:  cmd //C "${{ matrix.miniconda }} /S /D=%CD%\.miniconda"
    - name: Install miniconda (Unix)
      if: matrix.os != 'windows-latest'
      run:  bash "${{ matrix.miniconda }}" -b -p .miniconda

    - name: Build conda packages
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda create -n py${{ matrix.python }} python=${{ matrix.python }}
        conda activate py${{ matrix.python }}
        conda install -c cbillington setuptools_conda
        python setup.py dist_conda --from-wheel
    
    - uses: actions/upload-artifact@v1
      with:
        name: conda_packages
        path: ./conda_packages


  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: build

    env:
      MINICONDA: Miniconda3-latest-Linux-x86_64.sh

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist

    - uses: actions/download-artifact@v2
      with:
        name: conda_packages
        path: ./conda_packages

    - name: TestPyPI
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.testpypi }}
        repository_url: https://test.pypi.org/legacy/

    - name: PyPI
      if: github.event.ref_type == 'tag'
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.pypi }}

    - name: Install Miniconda and cloud client
      run: |
        curl -LO "https://repo.continuum.io/miniconda/$MINICONDA" 
        bash "$MINICONDA" -b -p .miniconda
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client

    - name: Anaconda cloud test label
      if: github.event.ref_type != 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user labscript-suite \
          --label test \
          conda_packages/*/*
          
    - name: Anaconda cloud main label
      if: github.event.ref_type == 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user labscript-suite \
          conda_packages/*/*